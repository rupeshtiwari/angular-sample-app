{"version":3,"sources":["./src/environments/environment.ts","./src/app/approvers/approvers.component.ts","./src/app/approvers/approvers.component.html","./src/app/core/services/people.api.service.ts","./src/app/core/services/logger.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/services/facility.api.service.ts","./src/app/selected-approver-dialog/selected-approver-dialog.component.ts","./src/app/selected-approver-dialog/selected-approver-dialog.component.html","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/facilites/facilites.component.ts","./src/app/facilites/facilites.component.html","./src/main.ts","./src/app/core/services/facility.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // baseURL: 'http://localhost:3000/',\r\n  baseURL :\"http://intranetus/Capital/approverstructure.aspx/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Approver } from '../core/models/approver';\r\nimport { FacilityApiService } from '../core/services/facility.api.service';\r\nimport { LoggerService } from '../core/services/logger.service';\r\nimport { SelectedApproverDialogComponent } from '../selected-approver-dialog/selected-approver-dialog.component';\r\n\r\n@Component({\r\n  selector: 'aprstruct-approvers',\r\n  templateUrl: './approvers.component.html',\r\n  styleUrls: ['./approvers.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ApproversComponent implements OnInit {\r\n  approvers$: Observable<Approver[]>;\r\n  displayedColumns: string[] = ['level', 'name', 'minimumCost', 'action'];\r\n  dataSource$;\r\n  facilityId;\r\n  facilityName: string;\r\n  division: string;\r\n  isLoading = true;\r\n  approverDialogWidth = '500px';\r\n\r\n  readonly dataSource: MatTableDataSource<Approver> = new MatTableDataSource();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private _snackBar: MatSnackBar,\r\n    private facilityApiSesrvice: FacilityApiService,\r\n    private logService: LoggerService\r\n  ) {\r\n    this.facilityName = this.queryParams('facilityName');\r\n    this.division = this.queryParams('division');\r\n    this.facilityId = +this.queryParams('facilityId');\r\n\r\n    this.dataSource$ = this.facilityApiSesrvice\r\n      .getApproversForFacility(this.facilityId)\r\n      .subscribe((data) => {\r\n        this.dataSource.data = data.sort((a, b) =>\r\n          a.level > b.level ? 0 : -1\r\n        );\r\n        this.isLoading = false;\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  private queryParams(id: string) {\r\n    return this.route.snapshot.queryParams[id];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n  }\r\n\r\n  confirmDelete(event, approver: Approver) {\r\n    event.preventDefault();\r\n    confirm(`Are you sure you want to delete ${approver.name}`);\r\n    this.facilityApiSesrvice.deleteApprover(approver.approverId);\r\n  }\r\n\r\n  openEditApprover(event, approver: Approver) {\r\n    event.preventDefault();\r\n    const data = {\r\n      approver,\r\n      facilityName: this.facilityName,\r\n      facilityId: this.facilityId,\r\n      action: 'Update',\r\n      approverStructureId: approver.approverStructureId,\r\n    };\r\n    this.logService.log(data);\r\n    const dialogRef = this.dialog.open(SelectedApproverDialogComponent, {\r\n      width: this.approverDialogWidth,\r\n      data,\r\n      autoFocus: true,\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(({ action }) => {\r\n      if (action === 'saved') {\r\n        this._snackBar.open(\r\n          'Your recent changes are saved successfully!',\r\n          'close',\r\n          { duration: 3000, verticalPosition: 'top' }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  openAddApprover(event) {\r\n    event.preventDefault();\r\n    const data = {\r\n      facilityName: this.facilityName,\r\n      facilityId: this.facilityId,\r\n      action: 'Create',\r\n    };\r\n    this.logService.log(data);\r\n    const dialogRef = this.dialog.open(SelectedApproverDialogComponent, {\r\n      width: this.approverDialogWidth,\r\n      data,\r\n      autoFocus: true,\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(({ action }) => {\r\n      if (action === 'saved') {\r\n        this._snackBar.open(\r\n          'Your recent changes are saved successfully!',\r\n          'close',\r\n          { duration: 3000, verticalPosition: 'top' }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"card\">\r\n    <mat-card-header>\r\n\r\n        <mat-card-title>\r\n\r\n            <span class=\"division\"> {{division}} </span>\r\n            <span class=\"facilityName\"> {{facilityName}} </span>\r\n\r\n\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n\r\n            <span class=\"instruction\">\r\n                <mat-icon color=\"warn\">info</mat-icon>\r\n                <em>\r\n                    Select an approver to update or click New Approver to add new one!\r\n                </em>\r\n            </span>\r\n\r\n        </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <button class=\"instruction\" (click)=\"openAddApprover($event)\" mat-raised-button color=\"primary\">\r\n            <mat-icon>add</mat-icon>\r\n            New Approver\r\n        </button>\r\n\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4\">\r\n\r\n            <ng-container matColumnDef=\"level\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-level\">\r\n                    <mat-icon>escalator</mat-icon>\r\n                    Level\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let approver\"> {{approver.level}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-name\">\r\n                    <mat-icon>local_police</mat-icon>\r\n                    Name\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let approver\"> {{approver.name}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"minimumCost\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-mc\">\r\n                    <mat-icon>monetization_on</mat-icon>\r\n                    Cost\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let approver\">\r\n\r\n\r\n                    {{approver.minimumCost|currency}}\r\n\r\n                </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-action\">\r\n                    <mat-icon>pending_actions</mat-icon>\r\n\r\n                    Actions\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let approver\">\r\n\r\n                    <div class=\"action\">\r\n                        <button (click)=\"openEditApprover($event,approver)\" mat-raised-button color=\"primary\">\r\n                            <mat-icon>edit</mat-icon>\r\n                            Edit\r\n                        </button>\r\n\r\n                        <button (click)=\"confirmDelete($event,approver)\" color=\"error\" mat-button>\r\n                            <mat-icon>delete</mat-icon>\r\n                            Delete\r\n                        </button></div>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <mat-spinner class=\"spinner\" *ngIf=\"isLoading\" style=\"text-align: center;\"></mat-spinner>\r\n    </mat-card-content>\r\n\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { People } from '../models/people';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PeopleApiService {\r\n  get allPerson$(): Observable<People[]> {\r\n    return of([\r\n      {\r\n        id: 1,\r\n        name: 'Cierra Vega',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Thomas Crane',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Bradyn Kramer',\r\n      },\r\n      {\r\n        name: 'Alvaro Mcgee',\r\n\r\n        id: 4,\r\n      },\r\n      {\r\n        name: 'Pierre Cox',\r\n\r\n        id: 5,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  get allLevels() {\r\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class LoggerService {\r\n    log(msg:any) {\r\n        console.log(msg);\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aprstruct-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'approvalStructureApp';\r\n}\r\n"," \r\n<mat-toolbar color=\"secondary\">\r\n    <div>\r\n        <a routerLink=\"/\"  mat-icon-button>\r\n        \r\n            <mat-icon color=\"primary\">corporate_fare</mat-icon>\r\n            Facilities\r\n        </a>\r\n    </div>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FacilitesComponent } from './facilites/facilites.component';\r\nimport { MaterialModule } from './material.module';\r\nimport { ApproversComponent } from './approvers/approvers.component';\r\nimport {SelectedApproverDialogComponent} from './selected-approver-dialog/selected-approver-dialog.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, FacilitesComponent, ApproversComponent,SelectedApproverDialogComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents:[SelectedApproverDialogComponent]\r\n})\r\nexport class AppModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, of, throwError } from 'rxjs';\r\nimport { catchError, delay, map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Approver } from '../models/approver';\r\nimport { Facility } from '../models/facility';\r\nimport { LoggerService } from './logger.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FacilityApiService {\r\n  baseURL: string;\r\n  _allApprovers$: BehaviorSubject<Approver[]> = new BehaviorSubject([\r\n    {\r\n      name: 'Cierra Vega',\r\n      level: 1,\r\n      minimumCost: 0,\r\n      approverStructureId: 1,\r\n      approverId: 1,\r\n    },\r\n    {\r\n      name: 'Thomas Crane',\r\n      level: 2,\r\n      minimumCost: 0,\r\n      approverStructureId: 2,\r\n      approverId: 2,\r\n    },\r\n    {\r\n      name: 'Bradyn Kramer',\r\n      level: 3,\r\n      minimumCost: 50000,\r\n      approverStructureId: 3,\r\n      approverId: 3,\r\n    },\r\n  ]);\r\n  allFacilities = [\r\n    {\r\n      division: 'Sales',\r\n      name: 'East Brunswick',\r\n      approverStructureId: 1,\r\n      facilityId: 1,\r\n    },\r\n    {\r\n      division: 'HR',\r\n      name: 'Woodbridge',\r\n      approverStructureId: 2,\r\n      facilityId: 2,\r\n    },\r\n    {\r\n      division: 'Billing',\r\n      name: 'Chicago',\r\n      facilityId: 3,\r\n      approverStructureId: 3,\r\n    },\r\n  ];\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private loggerService: LoggerService\r\n  ) {\r\n    this.baseURL = environment.baseURL;\r\n  }\r\n\r\n  addNewApprover(approverToAdd: Approver) {\r\n    approverToAdd.approverStructureId = this._allApprovers$.value.length + 1;\r\n    const allApprovers = this._allApprovers$.value;\r\n    allApprovers.push(approverToAdd);\r\n\r\n    this._allApprovers$.next(allApprovers);\r\n\r\n    return of(approverToAdd);\r\n  }\r\n\r\n  deleteApprover(id: number) {\r\n    const newApprovers = this._allApprovers$.value.filter(\r\n      (a) => a.approverId !== id\r\n    );\r\n    this._allApprovers$.next(newApprovers);\r\n  }\r\n\r\n  updateApprover(approverToUpdate: Approver) {\r\n    let allApprovers = this._allApprovers$.value;\r\n    allApprovers = allApprovers.map((approver) =>\r\n      approver.approverStructureId === approverToUpdate.approverStructureId\r\n        ? approverToUpdate\r\n        : approver\r\n    );\r\n\r\n    this._allApprovers$.next(allApprovers);\r\n\r\n    return of(approverToUpdate);\r\n  }\r\n\r\n  get allApprovers$() {\r\n    return this._allApprovers$.asObservable();\r\n  }\r\n\r\n  getAllFacilities() {\r\n    // const url = `${this.baseURL}GetAllFacilities`;\r\n    // return this.httpClient.post<Facility[]>(url, {}).pipe(\r\n    //   map((response: any) => response['d']),\r\n    //   catchError((e) => throwError(e))\r\n    // );\r\n\r\n    return of(this.allFacilities);\r\n  }\r\n\r\n  getApproversForFacility(facilityId: number) {\r\n    this.loggerService.log(`fetching approvers for facility ${facilityId}`);\r\n    return this._allApprovers$.asObservable().pipe(delay(500));\r\n  }\r\n}\r\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { People } from '../core/models/people';\r\nimport { SelectedApproverDialogData } from '../core/models/selected-approver-dialog-data';\r\nimport { FacilityApiService } from '../core/services/facility.api.service';\r\nimport { PeopleApiService } from '../core/services/people.api.service';\r\n\r\n@Component({\r\n  selector: 'aprstruct-selected-approver-dialog',\r\n  templateUrl: './selected-approver-dialog.component.html',\r\n  styleUrls: ['./selected-approver-dialog.component.css'],\r\n})\r\nexport class SelectedApproverDialogComponent implements OnInit, OnDestroy {\r\n  selectedApproverId: number;\r\n  selectedLevel;\r\n  minimumCost = 0;\r\n  facilityId;\r\n\r\n  isSaving = false;\r\n  allApprovers: People[];\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SelectedApproverDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SelectedApproverDialogData,\r\n    private approversApiService: PeopleApiService,\r\n    private facilityApiService: FacilityApiService\r\n  ) {\r\n    this.initialize();\r\n\r\n    this.subscriptions.push(\r\n      this.approversApiService.allPerson$.subscribe(\r\n        (approvers) => (this.allApprovers = approvers)\r\n      )\r\n    );\r\n  }\r\n\r\n  private initialize() {\r\n    this.facilityId = this.data.facilityId;\r\n\r\n    if (this.data.action === 'Update') {\r\n      this.selectedLevel = +this.data.approver.level;\r\n      this.selectedApproverId = this.data.approver.approverId;\r\n      this.minimumCost = this.data.approver.minimumCost;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscriptions != null) {\r\n      this.subscriptions.forEach((s) => s.unsubscribe());\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  close(event) {\r\n    event.preventDefault();\r\n    this.dialogRef.close({ action: 'cancel' });\r\n  }\r\n\r\n  async save(event) {\r\n    this.isSaving = true;\r\n    event.preventDefault();\r\n\r\n    if (this.isCreateAction) {\r\n      await this.facilityApiService\r\n        .addNewApprover(this.approverToSave)\r\n        .toPromise();\r\n    } else {\r\n      await this.facilityApiService\r\n        .updateApprover(this.approverToSave)\r\n        .toPromise();\r\n    }\r\n\r\n    this.isSaving = false;\r\n    this.dialogRef.close({ action: 'saved' });\r\n  }\r\n\r\n  get approverToSave() {\r\n    return {\r\n      level: this.selectedLevel,\r\n      minimumCost: this.minimumCost,\r\n      approverId: this.selectedApproverId,\r\n      facilityId: this.facilityId,\r\n      approverStructureId: this.data.approverStructureId,\r\n      name: this.allApprovers\r\n        .filter((approver) => approver.id === this.selectedApproverId)\r\n        .pop().name,\r\n    };\r\n  }\r\n\r\n  get isCreateAction() {\r\n    return this.data.action === 'Create';\r\n  }\r\n\r\n  get allLevels() {\r\n    return this.approversApiService.allLevels;\r\n  }\r\n\r\n  get facilityName() {\r\n    return this.data.facilityName;\r\n  }\r\n\r\n  get header() {\r\n    if (this.data.action === 'Create') {\r\n      return `CREATE NEW APPROVER`;\r\n    } else {\r\n      return `UPDATE APPROVER`;\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"card\" [ngClass]=\"{'working':isSaving}\">\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            <mat-icon color=\"primary\">\r\n                local_police\r\n            </mat-icon>\r\n            <span class=\"heading\">\r\n                {{header}}\r\n            </span>\r\n\r\n        </mat-card-title>\r\n\r\n    </mat-card-header>\r\n    <mat-divider class=\"sa-divider\">\r\n\r\n    </mat-divider>\r\n    <mat-card-content class=\"sa-content\">\r\n        <div>\r\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n                <mat-label>Minimum Cost</mat-label>\r\n                <input placeholder=\"0 or More only\" #cost=\"ngModel\" min=\"0\" name=\"cost\" type=\"number\" required matInput type=\"text\"\r\n                    [(ngModel)]=\"minimumCost\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n                <mat-label>Level</mat-label>\r\n                <mat-label>Select Level</mat-label>\r\n                <mat-select #level=\"ngModel\" name=\"level\" required [(ngModel)]=\"selectedLevel\">\r\n                    <mat-option *ngFor=\"let level of allLevels\" [value]=\"level\">{{level}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n                <mat-label>Select Approver</mat-label>\r\n                <mat-select #approver=\"ngModel\" name=\"approver\" required [(ngModel)]=\"selectedApproverId\">\r\n                    <mat-option *ngFor=\"let approver of allApprovers\" [value]=\"approver.id\">{{approver.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n        <button (click)=\"save($event)\" mat-raised-button color=\"primary\"\r\n            [disabled]=\"cost.errors?.required || level.errors?.required || approver.errors?.required || minimumCost <0\">\r\n            <mat-icon>save</mat-icon>\r\n            Save\r\n        </button>\r\n        <button (click)=\"close($event)\" mat-button color=\"secondary\">\r\n            <mat-icon>close</mat-icon>\r\n            No Thanks\r\n        </button>\r\n\r\n\r\n    </mat-card-actions>\r\n    <mat-spinner class=\"spinner\" *ngIf=\"isSaving\" style=\"text-align: center;\"></mat-spinner>\r\n\r\n\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ApproversComponent } from './approvers/approvers.component';\r\nimport { FacilitesComponent } from './facilites/facilites.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FacilitesComponent,\r\n  },\r\n  {\r\n    path: 'Capital/approvalstructure.aspx',\r\n    component: FacilitesComponent,\r\n  },\r\n  {\r\n    path: 'approvers/:facilityId',\r\n    component: ApproversComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Facility } from '../core/models/facility';\r\nimport { FacilityApiService } from '../core/services/facility.api.service';\r\nimport { FacilityService } from '../core/services/facility.service';\r\n\r\n@Component({\r\n  selector: 'aprstruct-facilites',\r\n  templateUrl: './facilites.component.html',\r\n  styleUrls: ['./facilites.component.css'],\r\n})\r\nexport class FacilitesComponent implements OnInit, OnDestroy {\r\n  facilities$: Observable<Facility[]>;\r\n  displayedColumns: string[] = ['division', 'name', 'action'];\r\n  isLoading = true;\r\n  readonly dataSource: MatTableDataSource<Facility> = new MatTableDataSource();\r\n  facilitySubscription: Subscription;\r\n\r\n  constructor(\r\n    private facilityService: FacilityService,\r\n    private facilityApiService: FacilityApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.facilitySubscription = this.facilityApiService\r\n      .getAllFacilities()\r\n      .subscribe((data) => {\r\n        this.isLoading = false;\r\n        this.dataSource.data = data;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.facilitySubscription) {\r\n      this.facilitySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  viewApprovers(facility: Facility) {\r\n    this.facilityService.selectFacility(facility);\r\n    this.router.navigate([`approvers/${facility.facilityId}`], {\r\n      queryParams: {\r\n        facilityName: facility.name,\r\n        division: facility.division,\r\n      },\r\n      relativeTo: this.route,\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"card\">\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n\r\n            <span class=\"activeFacility\"> ACTIVE FACILITIES</span>\r\n        </mat-card-title>\r\n        <mat-card-subtitle>\r\n\r\n            <span class=\"instruction\">\r\n                <mat-icon color=\"warn\">info</mat-icon>\r\n                <em>Select desired Facility to View it's approvers</em>\r\n            </span>\r\n        </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4\">\r\n\r\n            <ng-container matColumnDef=\"division\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-division\">\r\n                    <mat-icon color=\"primary\">storefront</mat-icon>\r\n                    Division\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let facility\"> {{facility.division}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-name\">\r\n                    <mat-icon color=\"primary\">apartment</mat-icon>\r\n                    Name\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let facility\"> {{facility.name}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"w-action\">\r\n                    <mat-icon color=\"primary\">pending_actions</mat-icon>\r\n\r\n                    Actions\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let facility\">\r\n                    <button (click)=\"viewApprovers(facility)\" mat-raised-button color=\"primary\">\r\n                        <mat-icon>visibility</mat-icon>\r\n                        View Approvers\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <mat-spinner class=\"spinner\" *ngIf=\"isLoading\" style=\"text-align: center;\"></mat-spinner>\r\n    </mat-card-content>\r\n\r\n</mat-card>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Facility } from '../models/facility';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FacilityService {\r\n  private _selectedFacility$ = new BehaviorSubject<Facility>(null);\r\n\r\n  get selectedFacility$() {\r\n    return this._selectedFacility$.asObservable();\r\n  }\r\n\r\n  selectFacility(facility: Facility) {\r\n    this._selectedFacility$.next(facility);\r\n  }\r\n\r\n  get selectedFacility() {\r\n    return this._selectedFacility$.value;\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}